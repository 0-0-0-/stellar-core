PEER_PORT= 39133
RUN_STANDALONE=false
LOG_FILE_PATH="favorite.log"

HTTP_PORT=39132
PUBLIC_HTTP_PORT=false


# every node has a PEER_SEED. 
# only nodes that want to participate in SCP need to set VALIDATION_SEED
# what generates the peerID (used for peer connections) used by this node
# if left off will generate a random one for you
PEER_SEED="s3vdAQ19YpHzRn3qbNLjLtvE3wD24WLxnoyNxsgsQ3qrRpVp4Ct"

# what generates the nodeID (used in SCP) 
VALIDATION_SEED="sfmYZRUn4ofZHzitXupxrrz5QJ7b9mij3rSEdrTNRFVvVgigrcS"


# will send outbound connections till we are at this number of peer connections
TARGET_PEER_CONNECTIONS=20

# will start dropping peers if above this number of connected peers
MAX_PEER_CONNECTIONS=30

#Peers we will always try to stay connected to
PREFERRED_PEERS=["127.0.0.1:7000","127.0.0.1:8000"]

# Other peers to try connecting to
KNOWN_PEERS=["127.0.0.1:5000","127.0.0.1:6000"]

# your quorum slice is any QUORUM_THRESHOLD number of nodes from the QUORUM_SET
QUORUM_THRESHOLD=2
QUORUM_SET=[
"gej5ac3HQx5YfY6QGkZdNBfGuXJ25dHrSqnX3zwHHQcCJwFRsi",
"gSqLku8Yvxg5cpvqjbrRM8EXqcxZ9KiEYAztvzpf1K84jhDNxF",
"gsiZA17PhBvBuKLyTkq4RYwT5CWpSLSLK7YcX1adsdPLWodHa4g"
]

# list of commands to run on startup
# right now only setting log levels really makes sense
COMMANDS=[
"ll?level=debug&partition=Overlay"
]

# Connection string for SOCI
#
# If using sqlite, a string like:
#
#   "sqlite3://path/to/dbname.db"
#
# alternatively, if using postgresql, a string like:
#
#   "postgresql://dbname=stellar user=xxxx password=yyyy host=10.0.x.y"
#
# taking any combination of parameters from:
#
#   http://www.postgresql.org/docs/devel/static/libpq-connect.html#LIBPQ-PARAMKEYWORDS
#
DATABASE="sqlite3://stellar.db"

# Specify where to fetch and the the history Archives
# with template parameters `{0}` and `{1}` in place of the files being transmitted or retrieved.
# you can specify multiple places to store and fetch from
[HISTORY.stellar]
get="curl http://history.stellar.org/{0} -o {1}"
put="aws s3 cp {0} s3://history.stellar.org/{1}"

[HISTORY.backup]
get="curl http://backupstore.blob.core.windows.net/backupstore/{0} -o {1}"
put="azure storage blob upload {0} backupstore {1}"
